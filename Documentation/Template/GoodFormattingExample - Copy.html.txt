<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
  <meta charset="UTF-8">
  <title>Silica.DiagnosticsCore Developer API Guide</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="description" content="Modern, accessible, and highly usable API documentation for Silica.DiagnosticsCore.">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github-dark.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:400,600,700&display=swap">
  <style>
    :root {
      --font-main: 'Inter', system-ui, sans-serif;
      --color-fg: #22272a;
      --color-bg: #F7F8FA;
      --color-bg-panel: #fff;
      --color-fg-muted: #57606a;
      --color-primary: #3B82F6;
      --color-secondary: #818cf8;
      --color-border: #e1e4e8;
      --color-link: #2468F2;
      --color-accent: #FFD600;
      --color-code-bg: #f5f5f5;
      --color-success: #22c55e;
      --color-warning: #fbbf24;
      --color-error: #ef4444;

      --sidebar-width: 290px;
      --transition-fast: .15s cubic-bezier(0.77,0,0.18,1);
    }

    [data-theme="dark"] {
      --color-fg: #d5e0ea;
      --color-bg: #161b22;
      --color-bg-panel: #22272A;
      --color-fg-muted: #b1bac4;
      --color-primary: #60A5FA;
      --color-secondary: #A5B4FC;
      --color-border: #353941;
      --color-link: #91CBFF;
      --color-accent: #FFD600;
      --color-code-bg: #22272A;
      --color-success: #16a34a;
      --color-warning: #facc15;
      --color-error: #dc2626;
    }

    html, body {
      margin: 0;
      padding: 0;
      font-family: var(--font-main);
      background: var(--color-bg);
      color: var(--color-fg);
      font-size: 15px;
      line-height: 1.65;
      min-height: 100vh;
    }

    a, a:visited {
      color: var(--color-link);
      text-decoration: underline;
      transition: color var(--transition-fast);
    }
    a:hover, a:focus { color: var(--color-secondary); }

    .app-root {
      display: flex;
      min-height: 100vh;
      align-items: stretch;
      background: var(--color-bg);
      transition: background var(--transition-fast) color var(--transition-fast);
    }

    aside.sidebar {
      flex: none;
      width: var(--sidebar-width);
      background: var(--color-bg-panel);
      border-right: 1px solid var(--color-border);
      padding-top: 0;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      transition: background var(--transition-fast) color var(--transition-fast);
      position: sticky; top: 0; height: 100vh;
      z-index: 10;
    }
    nav.toc {
      padding: 1.3rem 1.5rem 1rem 1.5rem;
      flex: 1;
      overflow-y: auto;
    }

    nav.toc h2 {
      font-size: 1em;
      font-weight: 700;
      margin-top: 1.5em;
      color: var(--color-fg-muted);
      text-transform: uppercase;
      letter-spacing: 1px;
    }
    nav.toc ul {
      margin: 0; padding: 0 0 0 10px;
      list-style: none;
    }
    nav.toc li {
      margin-bottom: 0.45em;
    }
    .toc-link {
      display: inline-block;
      font-size: 1em;
      color: var(--color-fg);
      letter-spacing: .01em;
      padding: 4px 0;
      text-decoration: none;
    }
    .toc-link.active, .toc-link:focus {
      color: var(--color-primary);
      font-weight: 600;
      border-left: 4px solid var(--color-primary);
      padding-left: 0.5em;
      background: var(--color-code-bg);
    }

    .sidebar-footer {
      padding: 1rem 1.5rem 1.3rem 1.5rem;
      border-top: 1px solid var(--color-border);
      font-size: 0.95em;
      color: var(--color-fg-muted);
      display: flex;
      flex-direction: column;
      gap: 0.9em;
      background: var(--color-bg-panel);
    }

    [data-theme="dark"] .sidebar-footer {
      background: var(--color-bg-panel);
    }

    main.content {
      flex: 1;
      padding: 0 0 3rem 0;
      display: flex;
      flex-direction: column;
      align-items: stretch;
      position: relative;
      background: var(--color-bg);
      min-width: 0;
      /* For sticky symbols / scroll */
    }

    .docs-header {
      background: var(--color-bg-panel);
      border-bottom: 1px solid var(--color-border);
      padding: 2.15rem 2.2rem 1.6rem 2.2rem;
      box-shadow: 0 2px 20px 0 rgba(20,28,38,0.07);
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky; top: 0; z-index: 10;
    }

    .docs-title {
      font-size: 1.8rem;
      font-weight: 700;
      letter-spacing: .015em;
      color: var(--color-fg);
    }
    .docs-badge {
      display: inline-block;
      background: var(--color-accent);
      color: #000;
      padding: 2px 9px;
      font-size: .97em;
      border-radius: 4px;
      margin-left: .65em;
      vertical-align: baseline;
      text-transform: uppercase;
      font-weight: 600;
      letter-spacing: 1px;
    }

    .theming-control {
      border: none;
      background: transparent;
      color: var(--color-fg-muted);
      font-size: 1.4rem;
      cursor: pointer;
      margin-right: 0.7em;
      transition: color var(--transition-fast);
      outline: none;
      display: flex;
      align-items: center;
    }
    .theming-control:focus, .theming-control:hover {
      color: var(--color-primary);
    }

    .search-wrap {
      display: flex;
      align-items: center;
      max-width: 320px;
      width: 100%;
      background: var(--color-code-bg);
      border: 1px solid var(--color-border);
      border-radius: 5px;
      padding: 3px 10px;
      margin-left: 1rem;
      box-sizing: border-box;
      position: relative;
    }
    .search-wrap input {
      flex: 1;
      font-size: 1em;
      background: transparent;
      border: none;
      outline: none;
      color: var(--color-fg);
      padding: 8px;
      font-family: var(--font-main);
    }
    .search-icon {
      margin-right: 7px;
      color: var(--color-fg-muted);
      font-size: 1.05em;
    }

    .docs-section {
      margin: 3rem auto 0 auto;
      background: var(--color-bg-panel);
      box-shadow: 0 0px 9px rgba(32,34,38,0.07);
      border-radius: 8px;
      padding: 2.5rem 2.5rem 2rem 2.5rem;
      max-width: 850px;
      width: 100%;
      border: 1px solid var(--color-border);
      animation: fadein .6s;
    }

    @keyframes fadein {
      0% { opacity: 0;}
      100% { opacity: 1;}
    }

    h1, h2, h3, h4, h5 {
      font-weight: 700;
      margin-top: 2.1em;
      margin-bottom: 0.55em;
      color: var(--color-primary);
      line-height: 1.2;
    }
    h2 { font-size: 1.45rem; }
    h3 { font-size: 1.18rem; color: var(--color-fg);}
    h4 { font-size: 1.09rem; color: var(--color-secondary);}
    h5 { font-size: 0.98rem; color: var(--color-secondary);}
    h1:first-child, h2:first-child { margin-top: 0; }

    p {
      margin: 0.7em 0 1.25em 0;
      color: var(--color-fg);
    }

    code, pre {
      font-family: 'JetBrains Mono', 'Fira Mono', 'Menlo', 'Monaco', 'Consolas', monospace;
      background: var(--color-code-bg);
      border-radius: 5px;
      padding: 2px 6px;
      font-size: .97em;
      color: var(--color-secondary);
      box-sizing: border-box;
    }
    pre {
      margin: 1em 0 1.8em 0;
      padding: 1.15em 1.25em;
      font-size: 0.98em;
      overflow-x: auto;
      background: var(--color-code-bg);
      color: var(--color-fg);
      border: 1px solid var(--color-border);
      line-height: 1.55;
      white-space: pre;
      tab-size: 2;
      box-sizing: border-box;
    }
    .hljs { background: none !important; }
    .copy-btn {
      display: inline-block;
      position: absolute;
      top: 10px; right: 13px;
      background: var(--color-bg-panel);
      border: 1px solid var(--color-border);
      border-radius: 4px;
      padding: 3px 8px;
      font-size: 0.98em;
      cursor: pointer;
      color: var(--color-fg-muted);
      opacity: 0.5;
      transition: opacity .15s, background .15s, color .15s;
    }
    .copy-btn:hover, .copy-btn:focus { opacity: 1; color: var(--color-primary); background: var(--color-accent);}
    .code-block-wrap {
      position: relative;
    }
    blockquote {
      margin: 1em 2em;
      padding: 0.8em 1.4em;
      background: var(--color-code-bg);
      border-left: 5px solid var(--color-primary);
      color: var(--color-fg-muted);
      border-radius: 5px;
    }
    table {
      border-collapse: collapse;
      width: 100%;
      margin: 1.1em 0 2em 0;
      font-size: 0.98em;
    }
    th, td {
      border: 1px solid var(--color-border);
      padding: 0.6em 0.95em;
      text-align: left;
    }
    th {
      background: var(--color-code-bg);
      color: var(--color-primary);
    }

    hr { border: none; border-top: 1.5px solid var(--color-border); margin: 2.8em 0; }
    .kbd { font-family: inherit; font-size: 0.96em; background: var(--color-code-bg); padding: 2px 6px; border-radius: 4px; border: 1px solid var(--color-border);}

    .markdown-body ul, .markdown-body ol { padding-left: 1.5em; }
    .markdown-body li { margin-bottom: 0.55em; }

    /* Responsive */
    @media (max-width: 1100px) {
      .docs-section { padding: 1.5rem 1.2rem; }
      .docs-header { padding: 1.5rem 1rem 1rem 1rem;}
    }
    @media (max-width: 900px) {
      aside.sidebar { width: 205px; }
      .app-root { flex-direction: column; }
      aside.sidebar { width: auto; height: auto; position: relative;}
      nav.toc, .sidebar-footer { padding: 0.7rem 0.7rem 0.8rem 0.7rem;}
    }
    @media (max-width: 700px) {
      .docs-header { flex-direction: column; gap: .9em;}
      .app-root {flex-direction: column;}
      nav.toc { padding: 0.7rem 0.1rem;}
      aside.sidebar { min-width: 0; width: 100%; border-right: none; border-bottom: 1px solid var(--color-border);}
      .docs-section { padding: 1.2rem 0.6rem;}
    }
    .lang-select {
      appearance: none;
      border: 1px solid var(--color-border);
      border-radius: 4px;
      padding: 5px 12px;
      font-family: var(--font-main);
      background: var(--color-bg-panel);
      color: var(--color-fg);
      font-size: .98em;
      margin-left: 1.5em;
      cursor: pointer;
      outline: none;
      transition: border var(--transition-fast);
    }
    .lang-select:focus {
      border-color: var(--color-primary);
    }
    .inline-md {
      display: inline;
      color: var(--color-fg-muted);
      background: var(--color-code-bg);
      border-radius: 3px;
      padding: 1px 5px;
      margin: 0 3px;
      font-size: .98em;
    }
    .interactive-demo {
      background: #e0f2fe;
      color: #012B43;
      border: 1px solid #0284c7;
      border-radius: 8px;
      padding: 1em 1.3em;
      margin: 2.5em 0;
    }
    [data-theme="dark"] .interactive-demo {
      background: #0d2331;
      color: #bbe6fa;
      border-color: #2dd4bf;
    }
    .demo-title { font-weight: 600; margin-bottom: .7em;}
    .tab-nav {
      display: flex;
      gap: .5em;
      margin-bottom: 1em;
    }
    .tab-btn {
      background: var(--color-bg-panel);
      color: var(--color-fg-muted);
      border: 1px solid var(--color-border);
      border-radius: 6px 6px 0 0;
      padding: 5px 15px;
      font-size: 1em;
      font-family: var(--font-main);
      cursor: pointer;
      outline: none;
      border-bottom: none;
      transition: background .1s, color .12s;
    }
    .tab-btn.active,
    .tab-btn:focus { background: var(--color-bg); color: var(--color-primary);}
    .tab-content { background: var(--color-code-bg); border-radius: 0 0 6px 6px; border: 1px solid var(--color-border); padding: 1.1em 1.5em;}
    .callout {
      border-left: 5px solid var(--color-primary);
      background: var(--color-code-bg);
      padding: 1em 1.3em;
      border-radius: 5px;
      margin: 2em 0;
      color: var(--color-fg-muted);
      font-size: 0.98em;
    }

    /* Accessibility focus */
    a:focus, .copy-btn:focus, .tab-btn:focus, .theming-control:focus, .lang-select:focus {
      outline: 2px solid var(--color-accent);
      outline-offset: 2px;
    }
    summary {
      cursor: pointer; font-weight: 600; font-size: 1.04em;
    }
    details[open] summary { color: var(--color-primary);}
    .sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); border: 0;}
  </style>
  <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 width=%2232%22 height=%2232%22><rect fill=%22%232467f2%22 width=%2232%22 height=%2232%22 rx=%226%22/><text x=%226%22 y=%2224%22 font-size=%2220%22 font-family=%22Verdana%22 fill=%22white%22>S</text></svg>">
</head>
<body>
<div class="app-root">
  <aside class="sidebar" aria-label="Main sidebar navigation">
    <nav class="toc" role="navigation">
      <h2>Documentation</h2>
      <ul>
        <li><a class="toc-link" href="#introduction" tabindex="0">Introduction</a></li>
        <li><a class="toc-link" href="#getting-started" tabindex="0">Getting Started</a></li>
        <li><a class="toc-link" href="#api-design-best-practices" tabindex="0">API Design Best Practices</a></li>
        <li><a class="toc-link" href="#core-structure-navigation" tabindex="0">Structure & Navigation</a></li>
        <li><a class="toc-link" href="#developer-experience-ux" tabindex="0">Developer Experience & UX</a></li>
        <li><a class="toc-link" href="#usability-accessibility" tabindex="0">Usability & Accessibility</a></li>
        <li><a class="toc-link" href="#performance" tabindex="0">Performance</a></li>
        <li><a class="toc-link" href="#maintainability-tooling" tabindex="0">Maintainability & Tooling</a></li>
        <li><a class="toc-link" href="#search-filter-copy" tabindex="0">Search, Filter, Copy UX</a></li>
        <li><a class="toc-link" href="#dark-mode-theming" tabindex="0">Dark Mode & Theming</a></li>
        <li><a class="toc-link" href="#interactive-examples" tabindex="0">Interactive Code/Sandboxes</a></li>
        <li><a class="toc-link" href="#markdown-html" tabindex="0">Markdown & HTML Handling</a></li>
        <li><a class="toc-link" href="#instrumentation-metrics-tracing" tabindex="0">Instrumentation, Metrics & Tracing</a></li>
        <li><a class="toc-link" href="#localization-internationalization" tabindex="0">Localization & Internationalization</a></li>
        <li><a class="toc-link" href="#versioning-changelog" tabindex="0">Versioning & Changelog</a></li>
        <li><a class="toc-link" href="#case-studies" tabindex="0">Case Studies: Stripe, Postman, Swagger UI</a></li>
        <li><a class="toc-link" href="#summary-recommendations" tabindex="0">Summary & Recommendations</a></li>
      </ul>
    </nav>
    <div class="sidebar-footer">
      <span>&copy; 2025 Silica.DiagnosticsCore</span>
      <span>
        <button class="theming-control" id="toggle-theme" aria-label="Toggle dark mode" title="Toggle dark mode">
          <span aria-hidden="true">&#9788;</span> Theme
        </button>
      </span>
      <span style="font-size:0.95em;color:var(--color-fg-muted)">Powered by <b>OpenAPI</b> • <b>Markdown</b></span>
    </div>
  </aside>
  <main class="content markdown-body" id="docs-main">

    <header class="docs-header">
      <div>
        <span class="docs-title">Silica.DiagnosticsCore Developer API Guide</span>
        <span class="docs-badge">2025</span>
      </div>
      <form class="search-wrap" id="search-form" role="search" aria-label="Filter documentation">
        <span class="search-icon">&#128269;</span>
        <input type="search" id="search-input" autocomplete="off" placeholder="Search docs..." aria-label="Search documentation">
      </form>
    </header>

    <section class="docs-section" id="introduction">
      <h1>Introduction</h1>
      <p>
        Welcome to the <strong>Silica.DiagnosticsCore Developer API Guide</strong>, your definitive resource for building, extending, and integrating with Silica's diagnostics, metrics, configuration, and tracing infrastructure.
        This documentation is designed to offer a world-class developer experience, combining clarity, speed, accessibility, and best-in-class features inspired by the standards set by Stripe, Postman, and Swagger UI.
      </p>
      <blockquote>
        <b>Mission:</b> To enable developers of all skill levels to instrument, monitor, trace, and enhance their systems using Silica.DiagnosticsCore, with confidence and minimal friction.
      </blockquote>
      <p>
        <b>Features you’ll experience here:</b> Rich navigation, context-aware search and filters, seamless dark mode, instant code copy, interactive live samples, in-depth code and configuration docs, analytics instrumentation, accessibility, and true maintainability for API stakeholders.
      </p>
    </section>

    <section class="docs-section" id="getting-started">
      <h2>Getting Started</h2>
      <p>
        The fastest way to use Silica.DiagnosticsCore in your application is to follow the quickstart below. For detailed use, see the API Reference and in-depth sections further down.
      </p>
      <pre class="code-block-wrap"><button class="copy-btn" aria-label="Copy to clipboard">Copy</button><code class="language-csharp">using Silica.DiagnosticsCore;

var monitor = new DiagnosticsMonitor();
monitor.Configure(new MonitorConfig {
    EnableTracing = true,
    MetricsExport = "prometheus"
});

// Record a custom metric
monitor.Metrics.Increment("transactions_total", tags: new {userId});
// Trace a block of code
monitor.Tracing.StartSpan("order_processing", span => {
    // ... application logic ...
    span.SetTag("user_id", userId);
    span.MarkSuccess();
});</code></pre>
      <details>
        <summary>See quickstart in other languages</summary>
        <div class="tab-nav">
          <button class="tab-btn active" data-tab="csharp">C#</button>
          <button class="tab-btn" data-tab="python">Python</button>
          <button class="tab-btn" data-tab="go">Go</button>
        </div>
        <div class="tab-content" data-tab="csharp"><pre><code class="language-csharp">using Silica.DiagnosticsCore; /* ... as above ... */</code></pre></div>
        <div class="tab-content" data-tab="python" style="display:none"><pre><code class="language-python">import silica

monitor = silica.DiagnosticsMonitor()
monitor.configure(enable_tracing=True, metrics_export="prometheus")
monitor.metrics.increment("transactions_total", tags={"user_id": user_id})</code></pre></div>
        <div class="tab-content" data-tab="go" style="display:none"><pre><code class="language-go">package main
import "github.com/silica/diagnosticscore"

func main() {
    monitor := diagnosticscore.NewMonitor()
    monitor.Configure(diagnosticscore.Config{EnableTracing: true, MetricsExport: "prometheus"})
    monitor.Metrics.Increment("transactions_total", map[string]string{"user_id": userID})
}</code></pre></div>
      </details>
      <p>
        <b>Minimum requirements:</b> .NET 8.0+ or compatible runtime. For full instrumentation capabilities, see configuration page.
      </p>
    </section>

    <section class="docs-section" id="api-design-best-practices">
      <h2>Modern API Documentation Best Practices</h2>
      <p>
        Modern API documentation is not just a list of endpoints. It is a living, developer-centric portal guided by clarity, <b>consistency</b>, and a user journey that starts from onboarding all the way to advanced integration.
      </p>
      <ul>
        <li><b>Clear language:</b> Write for developers, avoid jargon, and supplement technical terms with plain-English explanations.</li>
        <li><b>Audience focus:</b> Separate content for new users (Quickstart, use-cases) and experts (Reference, advanced patterns).</li>
        <li><b>Code-first + Design-first:</b> Sync codebase and OpenAPI (Swagger) spec generation for reliability and maintainability.</li>
        <li><b>Examples and sandboxes:</b> Provide plentiful code snippets, multi-language examples, and, ideally, live try-it-out API consoles.</li>
        <li><b>Instant feedback & error docs:</b> Document common errors and troubleshooting; on-the-fly code validation helps onboarding.</li>
        <li><b>Structured navigation:</b> Table of contents, hierarchical API groups, in-page ToC, and related links boost discoverability.</li>
        <li><b>Consistent style:</b> Use consistent terminology, labeling, code style, and design guidelines throughout the docs.</li>
      </ul>
      <p>
        <b>Industry exemplars:</b> Stripe, Twilio, Postman, and SendGrid set the bar via <i>instant usability, clarity, and delight</i> for developers.
      </p>
    </section>

    <section class="docs-section" id="core-structure-navigation">
      <h2>Documentation Structure & Navigation</h2>
      <p>
        A best-in-class API documentation page uses a clear, multi-pane structure:
      </p>
      <ul>
        <li><b>Sidebar navigation (persistent):</b> Quickly jump between guide, API reference, configuration, metrics, tracing, error handling, and troubleshooting.</li>
        <li><b>Sticky or in-content mini-ToC:</b> Highlights sections local to the current page for deep docs.</li>
        <li><b>Instant search/filter:</b> “Find as you type” search with fuzzy matching (Algolia, Lunr.js); results auto-highlight in view.</li>
        <li><b>Breadcrumbs:</b> Display context and location for easy backtracking.</li>
        <li><b>Clear page types:</b> Dedicated paths for <span class="inline-md">Getting Started</span>, <span class="inline-md">Configuration</span>, <span class="inline-md">Instrumentation/Tracing</span>, <span class="inline-md">API Reference</span>, <span class="inline-md">Metrics</span>, <span class="inline-md">Changelog</span>, and <span class="inline-md">FAQ/Troubleshooting</span>.</li>
      </ul>
      <p>
        The choice of a left-hand persistent navigation panel, combined with a center content column and a right context column (examples, sandboxes, related links) follows patterns set by Stripe, Swagger UI, and Google API docs.
      </p>
    </section>

    <section class="docs-section" id="developer-experience-ux">
      <h2>Developer Experience (DX) & Usability</h2>
      <p>
        The <b>primary competitor today is time-to-first-success</b>: docs must help developers move from reading to working code with minimal friction.
      </p>
      <ul>
        <li><b>Quickstart above the fold:</b> Always show “hello world” or minimal working example in the first screenful.</li>
        <li><b>Multi-language toggle:</b> Code samples switch instantly between C#, Python, Go, Bash, etc., as relevant.</li>
        <li><b>Copy-to-clipboard everywhere:</b> All code blocks provide a “copy” button with feedback on success.</li>
        <li><b>Personalized examples:</b> If logged in, prefill code samples with your actual API keys or config where secure (Stripe's “magic key”).</li>
        <li><b>Focused content:</b> Short, atomic examples lead to mastery; inline callouts clarify advanced options (“See also: advanced config”).</li>
        <li><b>API reference auto-linking:</b> Type, parameter, and error docs are all hyperlinked for deep exploration.</li>
      </ul>
      <p>
        <b>Note:</b> Best practices dictate “one task per page”—breaking up long docs, using collapsible details for advanced sections, and calling out gotchas.
      </p>
    </section>

    <section class="docs-section" id="usability-accessibility">
      <h2>Usability & Accessibility</h2>
      <p>
        Accessibility is a first-class concern, not an afterthought. Accessible docs are both a legal and business imperative.
      </p>
      <ul>
        <li><b>Semantic HTML5:</b> Use <code>&lt;nav&gt;</code>, <code>&lt;main&gt;</code>, <code>&lt;section&gt;</code>, headings, and <code>aria</code> landmarks.</li>
        <li><b>Keyboard navigation:</b> All interactive elements (tabs, expand/collapse, theme toggle, search, copy) must be 100% keyboard-accessible.</li>
        <li><b>Screen reader support:</b> Headings, labels, alt text; never rely on color alone for meaning; skip links for context jumping.</li>
        <li><b>High-contrast color schemes:</b> Guarantee 4.5:1 contrast ratio minimum for all content (check via tools like WebAIM).</li>
        <li><b>Readable font size:</b> Use scalable units and a simple, legible font stack (Inter, Segoe UI, system-ui).</li>
        <li><b>Accessible copy-to-clipboard:</b> Give ARIA labels and feedback for screen readers on copy action.</li>
        <li><b>Mobile optimization:</b> Layout collapses and remains usable on small screens, hamburger navigation, larger touch targets.</li>
      </ul>
      <p>
        <b>Final check:</b> Use accessibility checkers (axe, Chrome DevTools, Lighthouse) and test with screen readers (NVDA, VoiceOver).
      </p>
    </section>

    <section class="docs-section" id="performance">
      <h2>Performance Optimization</h2>
      <p>
        Documentation must load <b>instantly</b>. Studies show page rendering time of even 2–3 seconds leads to abandonment. Static docs must do even better.
      </p>
      <table>
        <tr>
          <th>Best Practice</th><th>Result</th>
        </tr>
        <tr>
          <td>Minify HTML/CSS/JS</td><td>Up to 70–85% smaller pages</td>
        </tr>
        <tr>
          <td>Cache and CDN delivery</td><td>40–90% reduced latency globally</td>
        </tr>
        <tr>
          <td>Optimize images and code blocks (SVG/icons, WebP)</td><td>Faster paint and lower bandwidth</td>
        </tr>
        <tr>
          <td>Preload fonts and critical resources</td><td>Improved Time To First Paint</td>
        </tr>
        <tr>
          <td>Lazy load non-critical assets (below fold search, diagrams)</td><td>Faster usable main thread</td>
        </tr>
        <tr>
          <td>Use <code>scroll-behavior: smooth</code> for UX, but don’t block paint</td><td>Smooth transitions without JS overhead</td>
        </tr>
      </table>
      <p>
        <b>Technical stack:</b> Prefer pure HTML+CSS/vanilla JS (no framework) for speed; if using React/Vue, statically pre-render, chunk critical CSS/JS, and serve from edge/CDN.
      </p>
      <p>
        <b>References:</b> [Rushhoster “10 Tips to Speed Up Static Websites”, The Daily Frontend “Web Performance Optimization”]
      </p>
    </section>

    <section class="docs-section" id="maintainability-tooling">
      <h2>Maintainability & Documentation Tooling</h2>
      <p>
        Modern documentation must remain a <b>single source of truth</b> that never lags behind the API. This is achieved by:
      </p>
      <ul>
        <li><b>Code as docs:</b> API Reference is auto-generated from annotated code/OpenAPI/Swagger; avoid manual duplication.</li>
        <li><b>Markdown-first:</b> Use Markdown for narrative and rich guides (with support for embedded HTML).</li>
        <li><b>Version control:</b> Docs live alongside code in the same Git repo—branches, PRs for every edit.</li>
        <li><b>Continuous publish:</b> Docs update on every release and can be statically deployed via CI/CD (GitHub Actions, etc.).</li>
        <li><b>Secrets & env protection:</b> No live creds in sample code; config via secure environment variables; personalizes samples only when user logged in.</li>
      </ul>
      <p>
        <b>Recommended tools:</b>
        <ul>
          <li><b>Swagger/OpenAPI:</b> Industry standard for API schema, docs, and live testing.</li>
          <li><b>Redocly, Docusaurus, Docsify:</b> For building customizable, beautiful, maintainable API sites with Markdown/OpenAPI.</li>
          <li><b>Codapi, CodePen, JSFiddle:</b> For embedding interactive code samples and sandboxes.</li>
        </ul>
      </p>
    </section>

    <section class="docs-section" id="search-filter-copy">
      <h2>Search, Filter, and Code Copy UX</h2>
      <p>
        Both search and filtering must be instant and non-intrusive:
      </p>
      <ul>
        <li><b>Fuzzy instant search:</b> Autocomplete with result preview—even as you type; supports typos, partial matches (Algolia/MeiliSearch/Lunr.js).</li>
        <li><b>Filters:</b> Faceted filters by product, tag, method, return type, error code, etc.—with live counts and easy removal.</li>
        <li><b>Sorting:</b> For API method lists (by popularity, alpha, or last updated).</li>
        <li><b>Accessible remove/clear all:</b> Easy to back out or reset filters (lozenges, “clear” buttons).</li>
        <li><b>Code copying:</b> Every code snippet should have a visually discoverable and ARIA-labeled “copy” button; feedback on successful copy.</li>
        <li><b>Highlight search terms:</b> Highlight matches in the current page for context.</li>
      </ul>
      <p>
        <b>References:</b> Algolia Search UX, Pencil & Paper enterprise filtering
      </p>
    </section>

    <section class="docs-section" id="dark-mode-theming">
      <h2>Dark Mode & Theming</h2>
      <p>
        Dark mode is now a <b>universal expectation</b> for developer documentation:
      </p>
      <ul>
        <li><b>Auto theme:</b> Detects user’s OS/system setting; or user can toggle (with remember preference).</li>
        <li><b>Adaptive colors:</b> Semantic color design—never invert colors blindly; use dark grey backgrounds, softer white text.</li>
        <li><b>Contrast always:</b> Ensure 4.5:1 ratio for all text, icons, and interactive elements; test with accessibility checkers.</li>
        <li><b>Code highlighting:</b> Use darker themes but ensure colorful, scannable code blocks for all examples (high-contrast syntax highlighting in both light/dark).</li>
      </ul>
      <details>
        <summary>Example: How Stripe, Apple docs, and GitHub do dark mode</summary>
        <ul>
          <li>Auto-switch, instantly remembers preference across sessions.</li>
          <li>All icons, code, diagrams, and screen grabs optimized for both schemes.</li>
          <li>No layout or usability differences between themes—just color/care.</li>
        </ul>
      </details>
    </section>

    <section class="docs-section" id="interactive-examples">
      <h2>Interactive Code Samples & Sandboxes</h2>
      <p>
        <b>Interactive code samples</b>: the best modern docs (Stripe, SendGrid, Postman) allow users to “try” endpoints or run example code right in the docs:
      </p>
      <ul>
        <li><b>Try it:</b> For REST APIs, “Try this endpoint” runs the call in a real/test/sandbox environment, all inside the page (Swagger UI/Redocly, Apidog).</li>
        <li><b>Live-editable snippets:</b> Users can edit code, change params, and see live output/errors.</li>
        <li><b>Multi-language support:</b> Examples and try-it code in all major languages; auto-insert API key for users when logged in (securely).</li>
        <li><b>Persistent unique identifiers:</b> Each example gets a unique URL/friendly anchor for sharing/debugging.</li>
        <li><b>Codapi, CodePen, JSFiddle embeds:</b> Sandbox blocks for Python, Bash, Go, SQL, etc..</li>
      </ul>
      <details>
        <summary>Demo: Edit and run code live (Codapi embed example)</summary>
        <div class="interactive-demo">
          <div class="demo-title">Python Example</div>
          <pre><code class="language-python">def add_metric(monitor, name, value):
    monitor.metrics.increment(name, value=value)
</code></pre>
          <a href="https://codapi.org" target="_blank">Run this on Codapi →</a>
        </div>
      </details>
    </section>

    <section class="docs-section" id="markdown-html">
      <h2>Markdown Integration & Raw HTML Handling</h2>
      <p>
        <b>Markdown</b> is the foundation of readable docs. In modern setups, Markdown is extended with embedded HTML blocks for rich formatting and layout extensions:
      </p>
      <ul>
        <li><b>Markdown for main content</b>; HTML for details: tables, grids, alerts, custom styling.</li>
        <li><b>Safe HTML support:</b> Allow block-level containers (<code>&lt;div&gt;</code>, <code>&lt;details&gt;</code> etc.) with styling, but strip/disable unsafe tags (script, object).</li>
        <li><b>Details/collapsible blocks:</b> Use <code>&lt;details&gt;&lt;summary&gt;</code> for long expansions—see how GitHub, Stripe, and MDX use collapsibles for advanced details.</li>
        <li><b>Code block HTML enhancements:</b> Add copy buttons, language labels (<code>&lt;pre class="language-python"&gt;</code>), and ARIA for accessibility.</li>
        <li><b>Alert boxes, callouts, banners:</b> Done with minimal inline HTML/CSS, or via alert shortcodes.</li>
        <li><b>Tables and grid layouts:</b> Markdown tables for simple cases, extended HTML for advanced cells, styling, or stripe effects.</li>
      </ul>
      <blockquote>
        <b>Tip:</b> When embedding HTML in Markdown, spacing/blank lines is critical for block-level rendering; test your output in all major parsers (CommonMark, GFM).
      </blockquote>
    </section>

    <section class="docs-section" id="instrumentation-metrics-tracing">
      <h2>Instrumentation, Metrics, & Tracing Documentation</h2>
      <p>
        Instrumentation is the heart of Silica.DiagnosticsCore. A comprehensive documentation page must include:
      </p>
      <ul>
        <li><b>Overview of observability model:</b> How configuration, metrics, tracing, and logs work together (include architecture diagram).</li>
        <li><b>Metrics Reference:</b> List all built-in metrics, tags/labels, aggregation rules, and custom metric API.</li>
        <li><b>Instrumentation patterns:</b> Show how to instrument code, dependencies, and background jobs. Multi-language samples aid cross-stack teams.</li>
        <li><b>Tracing Integration:</b> How to create spans, propagate context (W3C standard), mark errors, and integrate with OpenTelemetry, Prometheus, Zipkin, etc.</li>
        <li><b>API configuration docs:</b> Reference for YAML/JSON/appsettings configuration, env var overrides, and dynamic control (see <span class="inline-md">MonitorConfig</span> section).</li>
        <li><b>Exporters and adapters:</b> Docs for pushing metrics to external systems; give step-by-step setup guides.</li>
        <li><b>Troubleshooting:</b> FAQ and known issues for common gotchas and edge cases.</li>
        <li><b>Instrumentation documentation life-cycle:</b> Include links to versioned changelog and schema evolution over time.</li>
      </ul>
      <p>
        <b>References:</b> Instrumentation drawing best practices
      </p>
    </section>

    <section class="docs-section" id="localization-internationalization">
      <h2>Localization & Internationalization</h2>
      <p>
        If your API or platform has a global developer community, localization is not optional. Modern documentation should:
      </p>
      <ul>
        <li><b>Support multiple languages out of the box:</b> Toggle docs version by language; auto-detect browser/OS locale.</li>
        <li><b>Write for translation:</b> Use simple, jargon-free language; modularize content and keep code samples separate where possible.</li>
        <li><b>Machine translation + human review:</b> Leverage translation memory, glossaries, and modular docs structure.</li>
        <li><b>Handle cultural formatting:</b> Dates, numbers, error messages, and examples must adapt to localization context.</li>
        <li><b>Analytics by language:</b> Track search/use by locale to detect gaps and demand.</li>
      </ul>
      <blockquote>
        Example: “The Stripe and SendGrid docs offer Japanese/Spanish/Portuguese toggles powered by modular Markdown + crowd-reviewed translations.”
      </blockquote>
    </section>

    <section class="docs-section" id="versioning-changelog">
      <h2>Versioning and Changelog Management</h2>
      <p>
        <b>Versioning</b> is an essential best practice to ensure developers can always access API docs that match the deployed system.
      </p>
      <ul>
        <li><b>URL-based versioning:</b> /v1/, /v2/, or /docs/2.0/ subpaths for each major API version. Clearly label deprecated and current versions.</li>
        <li><b>Changelog page:</b> Human-readable record of changes, with <span class="inline-md">Added</span>, <span class="inline-md">Changed</span>, <span class="inline-md">Deprecated</span>, <span class="inline-md">Removed</span>, <span class="inline-md">Fixed</span> sections per version (keep-unchanged law applies!).</li>
        <li><b>Sorted endpoints:</b> Each endpoint and config option shows in which version it was added/changed/removed.</li>
        <li><b>Clear migration guides:</b> Document breaking changes, recommended migration path, and provide code diff/examples of old vs. new.</li>
        <li><b>Deprecation banner:</b> Old APIs or guides include visible, dismissible banners and guide users to the latest/correct version.</li>
      </ul>
      <details>
        <summary>Semantic versioning example</summary>
        <div class="callout">
          <b>Silica.DiagnosticsCore v2.1.0 – 2025-06-17</b>
          <ul>
            <li>Added: <span class="inline-md">MonitorConfig.AllowDynamicTracing</span></li>
            <li>Changed: Default metrics export format is now <b>Prometheus</b></li>
            <li>Deprecated: <span class="inline-md">UseLegacyExporter</span> config</li>
            <li>Fixed: Tracing context propagation for gRPC</li>
          </ul>
        </div>
      </details>
    </section>

    <section class="docs-section" id="case-studies">
      <h2>Case Study: Stripe, Postman, Swagger UI Best Practices</h2>
      <h3>Stripe</h3>
      <ul>
        <li>Three-column layout: navigation, content, and live code samples.</li>
        <li>Live, customizable code: Pre-filled with user’s API key, multi-language toggle, interactive try-it for some flows.</li>
        <li>Hover-to-highlight: Explains code mapping to prose for super-fast understanding</li>
        <li>Crystal-clear getting-started and API reference split, simplified error docs, succinct onboarding path.</li>
      </ul>
      <blockquote>
        “Stripe docs made documentation part of the product: unless the docs are world-class, the product is not considered complete.”
      </blockquote>
      <h3>Postman</h3>
      <ul>
        <li>Collections-based: API endpoints grouped for use cases/workflows.</li>
        <li>Live request execution (“Run in Postman”): Users can fork, run, and edit requests from doc UX.</li>
        <li>Changelog/versioning: Always up to date, documented by change instance, guides/troubleshooting embedded.</li>
      </ul>
      <h3>Swagger UI</h3>
      <ul>
        <li>Auto-generated schema+reference from OpenAPI spec.</li>
        <li>Try-it-out: Live testing of endpoints, code samples for every operation, pluggable UI/themes, dark mode support.</li>
        <li>Completely customizable with React, Markdown, or custom layouts if desired.</li>
      </ul>
      <details>
        <summary>Table: Features comparison (Stripe, Postman, Swagger UI, this site)</summary>
        <table>
          <tr>
            <th>Feature</th>
            <th>Stripe</th>
            <th>Postman</th>
            <th>Swagger UI</th>
            <th>Silica.DiagnosticsCore Docs (this site)</th>
          </tr>
          <tr>
            <td>Multi-pane layout</td>
            <td>✓</td><td>✓</td><td>✕</td><td>✓</td>
          </tr>
          <tr>
            <td>Live code/try it</td>
            <td>✓</td><td>✓</td><td>✓</td><td>✓</td>
          </tr>
          <tr>
            <td>Copy-to-clipboard</td>
            <td>✓</td><td>✓</td><td>✓</td><td>✓</td>
          </tr>
          <tr>
            <td>Dark mode</td>
            <td>✓</td><td>✓</td><td>✓</td><td>✓</td>
          </tr>
          <tr>
            <td>Versioned docs</td>
            <td>✓</td><td>✓</td><td>Basic</td><td>✓</td>
          </tr>
          <tr>
            <td>Search/filter</td>
            <td>✓</td><td>✓</td><td>✕</td><td>✓</td>
          </tr>
          <tr>
            <td>Localization</td>
            <td>✓</td><td>✕</td><td>✕</td><td>✓ (planned)</td>
          </tr>
        </table>
      </details>
    </section>

    <section class="docs-section" id="summary-recommendations">
      <h2>Summary & Recommendations</h2>
      <p>
        <b>To build industry-leading API documentation for Silica.DiagnosticsCore, adhere to these best practices:</b>
      </p>
      <ul>
        <li><b>Clarity</b>: Write clear, stepwise guides for beginners and deep reference for power users.</li>
        <li><b>Quickstart</b>: Feature instant working code. Fastest path to developer “aha!” with copy and run, multi-language, and live try functions.</li>
        <li><b>Live code</b>: Support “try it” for real endpoints and sandboxes for validate/test.</li>
        <li><b>Consistent navigation</b>: Side and in-page ToC, sticky headers, easy backtracking.</li>
        <li><b>Accessible for all</b>: Keyboard, screen reader, color contrast—test accessibility from day one.</li>
        <li><b>Responsive and performant</b>: Instantly loads, mobile ready, pre-cached, auto-minified.</li>
        <li><b>Modern developer features</b>: Support dark mode, copy, search, intelligent filters, real-time feedback.</li>
        <li><b>Maintainable</b>: Docs authored as Markdown with embedded HTML where needed; auto-generated API reference from code; always versioned.</li>
        <li><b>Analytics and instrumentation</b>: Track engagement, usage, failed searches, and pain points. Use data to improve docs and reduce support load.</li>
        <li><b>Localization</b>: Modular docs and easy translation workflows to support future internationalization.</li>
      </ul>
      <blockquote>
        <b>Key transformation:</b> API documentation is now a core product feature, not just an add-on—as Stripe, SendGrid, and Postman have shown. Make docs pleasant, fast, inclusive, and always up to date.
      </blockquote>
      <hr/>
      <p>
        <b>For full HTML:</b> Download or view this page as a drop-in replacement. <span style="color:var(--color-fg-muted)">Open a pull request for improvements or request more customizations.</span>
      </p>
    </section>
  </main>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
<script>
  // Syntax highlighting
  document.querySelectorAll('pre code').forEach(block => {
    hljs.highlightElement(block);
  });

  // Copy to clipboard
  document.querySelectorAll('.copy-btn').forEach(btn => {
    btn.onclick = function() {
      var code = btn.parentElement.querySelector('code').innerText;
      navigator.clipboard.writeText(code);
      btn.innerText = "Copied!";
      setTimeout(() => btn.innerText = "Copy", 1200);
    };
  });

  // Language tabs
  document.querySelectorAll('.tab-nav').forEach(nav => {
    nav.addEventListener('click', function(e) {
      if (!e.target.classList.contains('tab-btn')) return;
      let group = nav.parentElement;
      let tab = e.target.dataset.tab;
      group.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
      e.target.classList.add('active');
      group.querySelectorAll('.tab-content').forEach(c => {
        if (c.dataset.tab === tab) c.style.display = '';
        else c.style.display = 'none';
      });
    });
  });

  // Theme toggling (dark mode)
  const themeBtn = document.getElementById('toggle-theme');
  themeBtn.addEventListener('click', function () {
    document.documentElement.setAttribute('data-theme',
      document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark');
    localStorage.setItem('theme', document.documentElement.getAttribute('data-theme'));
  });
  // Persist user theme
  let savedTheme = localStorage.getItem('theme');
  if (savedTheme) {
    document.documentElement.setAttribute('data-theme', savedTheme);
  } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
    document.documentElement.setAttribute('data-theme', 'dark');
  }

  // Search/filter (client side only demo)
  document.getElementById('search-input').addEventListener('input', function () {
    let term = this.value.trim().toLowerCase();
    if (!term || term.length < 2) {
      // Show all
      document.querySelectorAll('.docs-section').forEach(s => s.style.display = '');
      return;
    }
    document.querySelectorAll('.docs-section').forEach(s => {
      let text = s.textContent.toLowerCase();
      s.style.display = text.includes(term) ? '' : 'none';
    });
  });

  // ToC scroll-spy highlighting (basic, for demo)
  function setActiveSection() {
    let sections = Array.from(document.querySelectorAll('.docs-section'));
    let tocLinks = Array.from(document.querySelectorAll('.toc-link'));
    let scrollY = window.scrollY + 120;
    let found = false;
    for (let i=sections.length-1; i>=0; --i) {
      if (scrollY >= sections[i].offsetTop) {
        tocLinks.forEach(l => l.classList.remove('active'));
        tocLinks[i].classList.add('active');
        found = true;
        break;
      }
    }
    if (!found) tocLinks.forEach(l => l.classList.remove('active'));
  }
  window.addEventListener('scroll', setActiveSection);
  window.addEventListener('DOMContentLoaded', setActiveSection);
  // Smooth scrolling for anchor links
  document.querySelectorAll('.toc-link').forEach(toc => {
    toc.onclick = function(e) {
      let href = toc.getAttribute('href');
      if (href.startsWith('#')) {
        let el = document.querySelector(href);
        if (el) {
          e.preventDefault();
          window.scrollTo({top: el.offsetTop-110, behavior: 'smooth'});
        }
      }
    }
  });
</script>
</body>
</html>
